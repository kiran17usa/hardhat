{
  "address": "0xecd5Ae108F90C6271EcaD9d8a15b2a9a26996Ade",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumUsd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x6533e7376ef3b6e94c1d362bba3b2637601efa2f56474ed98cc7f9ab71a09b9c",
  "receipt": {
    "to": null,
    "from": "0xaD2CD3E602A8403B5A090fA32E48219B347D71Fa",
    "contractAddress": "0xecd5Ae108F90C6271EcaD9d8a15b2a9a26996Ade",
    "transactionIndex": 156,
    "gasUsed": "859000",
    "logsBloom": "0x
    "blockHash": "0x15950467dc1dd6fe7f746e82fff6428d99408be5db39e3f8fc5e59731db98878",
    "transactionHash": "0x6533e7376ef3b6e94c1d362bba3b2637601efa2f56474ed98cc7f9ab71a09b9c",
    "logs": [],
    "blockNumber": 8208620,
    "cumulativeGasUsed": "15703798",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 1,
  "solcInputHash": "28bc1d74dc8860128c2eced1354d71c3",
  "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumUsd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// Get funds from user\\n// withdraw funds\\n// set a minimum funding value in USD\\n\\n// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.26;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\n//import {AggregatorV3Interface} from \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n    uint256 public minimumUsd = 50 * 1e18;\\n    address[] public funders;\\n    mapping(address => uint256) public addressToAmountFunded;\\n\\n    address public owner;\\n    AggregatorV3Interface public priceFeed;\\n\\n    constructor(address priceFeedAddress) {\\n        owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        //want to be able to set a minimum fund amount\\n        //1. how do we send ETH to this contract?\\n\\n        //msg.value.getConversionRate(); //instead of below\\n        require(\\n            msg.value.getConversionRate(priceFeed) > minimumUsd,\\n            \\\"Didn't send enough!\\\"\\n        ); //1*10*18=wei= 1eth\\n        //require(getConversionRate(msg.value) > minimumUsd, \\\"Didn't send enough!\\\"); //1*10*18=wei= 1eth\\n        //18 decimals\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        //require(msg.sender == owner, \\\"Sender is not the owner!\\\");\\n\\n        //for(/*starting index, ending index, step amount - 0, 10, 1 */)\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        //reset the array\\n        funders = new address[](0);\\n        //actually withdraw the funds\\n        //transfer\\n        //send\\n        //call\\n        //msg.sender = address\\n        //payable(msg.sender) = payable address\\n        //bool sendSuccess = payable(msg.sender).transfer(address(this).balance);\\n        //require(sendSuccess, \\\"send failed\\\");\\n\\n        //call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"call failed\\\");\\n    }\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"Sender is not the owner!\\\");\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0x90cc778367f7cb121f6c518d927479902b159ede489b87c7962bb81463ac5b63\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {AggregatorV3Interface} from \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        //ABI\\n        //Address of contract\\n        //sepolia test network eth/usd 0x694AA1769357215DE4FAC081bf1f309aDC325306\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n        //     0x694AA1769357215DE4FAC081bf1f309aDC325306\\n        // );\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        //ETH in terms of USD\\n        //3000.0000000  - 18 decimals\\n        return uint256(price * 1e10); //1**10 = 10000000000\\n    }\\n\\n    // function getVersion() internal view returns (uint256) {\\n    //     AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n    //         0x694AA1769357215DE4FAC081bf1f309aDC325306\\n    //     );\\n    //     return priceFeed.version();\\n    // }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x58cd8f76ae5d28154769d935a7a537eeb0ae70d6706a1dfa275579ceefaa02ff\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526802b5e3af16b188000060005534801561001d57600080fd5b50604051610ebc380380610ebc833981810160405281019061003f919061012a565b33600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610157565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100f7826100cc565b9050919050565b610107816100ec565b811461011257600080fd5b50565b600081519050610124816100fe565b92915050565b6000602082840312156101405761013f6100c7565b5b600061014e84828501610115565b91505092915050565b610d56806101666000396000f3fe6080604052600436106100705760003560e01c8063741bef1a1161004e578063741bef1a146100f45780638da5cb5b1461011f578063b60d42881461014a578063dc0d3dff1461015457610070565b8063098de820146100755780633ccfd60b146100a05780633e47d6f3146100b7575b600080fd5b34801561008157600080fd5b5061008a610191565b604051610097919061072e565b60405180910390f35b3480156100ac57600080fd5b506100b5610197565b005b3480156100c357600080fd5b506100de60048036038101906100d991906107ac565b6103dd565b6040516100eb919061072e565b60405180910390f35b34801561010057600080fd5b506101096103f5565b6040516101169190610838565b60405180910390f35b34801561012b57600080fd5b5061013461041b565b6040516101419190610862565b60405180910390f35b610152610441565b005b34801561016057600080fd5b5061017b600480360381019061017691906108a9565b610562565b6040516101889190610862565b60405180910390f35b60005481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610227576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021e90610933565b60405180910390fd5b60005b6001805490508110156102cd5760006001828154811061024d5761024c610953565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808060010191505061022a565b50600067ffffffffffffffff8111156102e9576102e8610982565b5b6040519080825280602002602001820160405280156103175781602001602082028036833780820191505090505b506001908051906020019061032d92919061066e565b5060003373ffffffffffffffffffffffffffffffffffffffff1647604051610354906109e2565b60006040518083038185875af1925050503d8060008114610391576040519150601f19603f3d011682016040523d82523d6000602084013e610396565b606091505b50509050806103da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d190610a43565b60405180910390fd5b50565b60026020528060005260406000206000915090505481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600054610479600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105a190919063ffffffff16565b116104b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b090610aaf565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6001818154811061057257600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105ad836105dd565b90506000670de0b6b3a764000085836105c69190610afe565b6105d09190610b6f565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561062b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064f9190610c2d565b5050509150506402540be400816106669190610ca8565b915050919050565b8280548282559060005260206000209081019282156106e7579160200282015b828111156106e65782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061068e565b5b5090506106f491906106f8565b5090565b5b808211156107115760008160009055506001016106f9565b5090565b6000819050919050565b61072881610715565b82525050565b6000602082019050610743600083018461071f565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107798261074e565b9050919050565b6107898161076e565b811461079457600080fd5b50565b6000813590506107a681610780565b92915050565b6000602082840312156107c2576107c1610749565b5b60006107d084828501610797565b91505092915050565b6000819050919050565b60006107fe6107f96107f48461074e565b6107d9565b61074e565b9050919050565b6000610810826107e3565b9050919050565b600061082282610805565b9050919050565b61083281610817565b82525050565b600060208201905061084d6000830184610829565b92915050565b61085c8161076e565b82525050565b60006020820190506108776000830184610853565b92915050565b61088681610715565b811461089157600080fd5b50565b6000813590506108a38161087d565b92915050565b6000602082840312156108bf576108be610749565b5b60006108cd84828501610894565b91505092915050565b600082825260208201905092915050565b7f53656e646572206973206e6f7420746865206f776e6572210000000000000000600082015250565b600061091d6018836108d6565b9150610928826108e7565b602082019050919050565b6000602082019050818103600083015261094c81610910565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b60006109cc6000836109b1565b91506109d7826109bc565b600082019050919050565b60006109ed826109bf565b9150819050919050565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610a2d600b836108d6565b9150610a38826109f7565b602082019050919050565b60006020820190508181036000830152610a5c81610a20565b9050919050565b7f4469646e27742073656e6420656e6f7567682100000000000000000000000000600082015250565b6000610a996013836108d6565b9150610aa482610a63565b602082019050919050565b60006020820190508181036000830152610ac881610a8c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b0982610715565b9150610b1483610715565b9250828202610b2281610715565b91508282048414831517610b3957610b38610acf565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b7a82610715565b9150610b8583610715565b925082610b9557610b94610b40565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bbf81610ba0565b8114610bca57600080fd5b50565b600081519050610bdc81610bb6565b92915050565b6000819050919050565b610bf581610be2565b8114610c0057600080fd5b50565b600081519050610c1281610bec565b92915050565b600081519050610c278161087d565b92915050565b600080600080600060a08688031215610c4957610c48610749565b5b6000610c5788828901610bcd565b9550506020610c6888828901610c03565b9450506040610c7988828901610c18565b9350506060610c8a88828901610c18565b9250506080610c9b88828901610bcd565b9150509295509295909350565b6000610cb382610be2565b9150610cbe83610be2565b9250828202610ccc81610be2565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610d0457610d03610acf565b5b8282058414831517610d1957610d18610acf565b5b509291505056fea26469706673582212207ccd58fdf69457e889060c62adfedb176f900031c29b858bbf18232dbe1d17b164736f6c634300081c0033",
  "deployedBytecode": "0x6080604052600436106100705760003560e01c8063741bef1a1161004e578063741bef1a146100f45780638da5cb5b1461011f578063b60d42881461014a578063dc0d3dff1461015457610070565b8063098de820146100755780633ccfd60b146100a05780633e47d6f3146100b7575b600080fd5b34801561008157600080fd5b5061008a610191565b604051610097919061072e565b60405180910390f35b3480156100ac57600080fd5b506100b5610197565b005b3480156100c357600080fd5b506100de60048036038101906100d991906107ac565b6103dd565b6040516100eb919061072e565b60405180910390f35b34801561010057600080fd5b506101096103f5565b6040516101169190610838565b60405180910390f35b34801561012b57600080fd5b5061013461041b565b6040516101419190610862565b60405180910390f35b610152610441565b005b34801561016057600080fd5b5061017b600480360381019061017691906108a9565b610562565b6040516101889190610862565b60405180910390f35b60005481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610227576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021e90610933565b60405180910390fd5b60005b6001805490508110156102cd5760006001828154811061024d5761024c610953565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808060010191505061022a565b50600067ffffffffffffffff8111156102e9576102e8610982565b5b6040519080825280602002602001820160405280156103175781602001602082028036833780820191505090505b506001908051906020019061032d92919061066e565b5060003373ffffffffffffffffffffffffffffffffffffffff1647604051610354906109e2565b60006040518083038185875af1925050503d8060008114610391576040519150601f19603f3d011682016040523d82523d6000602084013e610396565b606091505b50509050806103da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d190610a43565b60405180910390fd5b50565b60026020528060005260406000206000915090505481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600054610479600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105a190919063ffffffff16565b116104b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b090610aaf565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6001818154811061057257600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105ad836105dd565b90506000670de0b6b3a764000085836105c69190610afe565b6105d09190610b6f565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561062b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064f9190610c2d565b5050509150506402540be400816106669190610ca8565b915050919050565b8280548282559060005260206000209081019282156106e7579160200282015b828111156106e65782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061068e565b5b5090506106f491906106f8565b5090565b5b808211156107115760008160009055506001016106f9565b5090565b6000819050919050565b61072881610715565b82525050565b6000602082019050610743600083018461071f565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107798261074e565b9050919050565b6107898161076e565b811461079457600080fd5b50565b6000813590506107a681610780565b92915050565b6000602082840312156107c2576107c1610749565b5b60006107d084828501610797565b91505092915050565b6000819050919050565b60006107fe6107f96107f48461074e565b6107d9565b61074e565b9050919050565b6000610810826107e3565b9050919050565b600061082282610805565b9050919050565b61083281610817565b82525050565b600060208201905061084d6000830184610829565b92915050565b61085c8161076e565b82525050565b60006020820190506108776000830184610853565b92915050565b61088681610715565b811461089157600080fd5b50565b6000813590506108a38161087d565b92915050565b6000602082840312156108bf576108be610749565b5b60006108cd84828501610894565b91505092915050565b600082825260208201905092915050565b7f53656e646572206973206e6f7420746865206f776e6572210000000000000000600082015250565b600061091d6018836108d6565b9150610928826108e7565b602082019050919050565b6000602082019050818103600083015261094c81610910565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b60006109cc6000836109b1565b91506109d7826109bc565b600082019050919050565b60006109ed826109bf565b9150819050919050565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610a2d600b836108d6565b9150610a38826109f7565b602082019050919050565b60006020820190508181036000830152610a5c81610a20565b9050919050565b7f4469646e27742073656e6420656e6f7567682100000000000000000000000000600082015250565b6000610a996013836108d6565b9150610aa482610a63565b602082019050919050565b60006020820190508181036000830152610ac881610a8c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b0982610715565b9150610b1483610715565b9250828202610b2281610715565b91508282048414831517610b3957610b38610acf565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b7a82610715565b9150610b8583610715565b925082610b9557610b94610b40565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bbf81610ba0565b8114610bca57600080fd5b50565b600081519050610bdc81610bb6565b92915050565b6000819050919050565b610bf581610be2565b8114610c0057600080fd5b50565b600081519050610c1281610bec565b92915050565b600081519050610c278161087d565b92915050565b600080600080600060a08688031215610c4957610c48610749565b5b6000610c5788828901610bcd565b9550506020610c6888828901610c03565b9450506040610c7988828901610c18565b9350506060610c8a88828901610c18565b9250506080610c9b88828901610bcd565b9150509295509295909350565b6000610cb382610be2565b9150610cbe83610be2565b9250828202610ccc81610be2565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610d0457610d03610acf565b5b8282058414831517610d1957610d18610acf565b5b509291505056fea26469706673582212207ccd58fdf69457e889060c62adfedb176f900031c29b858bbf18232dbe1d17b164736f6c634300081c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 56,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "minimumUsd",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "owner",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 68,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}